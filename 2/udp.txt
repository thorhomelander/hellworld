#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>
#include<unistd.h>

int main(int argc,char *argv[])
{

      char *ip="127.0.0.1";

      if(argc!=2)
      {
              perror("argument error\n");
              exit(1);
      }

      int port=atoi(argv[1]);

      int sock;
      struct sockaddr_in server_addr,client_addr;
      socklen_t addr_size;
      char buffer[1024];
      int n;

      sock=socket(AF_INET,SOCK_DGRAM,0);

      if(sock < 0)
      {
              perror("socket error");
              exit(1);
      }

      memset(&server_addr,'\0',sizeof(server_addr));
      server_addr.sin_family=AF_INET;
      server_addr.sin_port=htons(port);
      server_addr.sin_addr.s_addr=inet_addr(ip);

      n=bind(sock,(struct sockaddr*)&server_addr,sizeof(server_addr));

      if(n<0)
      {
              perror("bind error");
              exit(1);
      }

      bzero(buffer,1024);
      addr_size=sizeof(client_addr);
      recvfrom(sock,buffer,1024,0,(struct sockaddr*)&client_addr,&addr_size);
      printf("Client : %s\n",buffer);

      bzero(buffer,1024);
      strcpy(buffer,"this is to client");
      sendto(sock,buffer,1024,0,(struct sockaddr*)&client_addr,sizeof(client_addr));


        return 0;
}
[s2021103049@centos8-linux Tue Nov 14 04:04 PM w3]$ cat udp_c
udp_c.c    udp_cli.c
[s2021103049@centos8-linux Tue Nov 14 04:04 PM w3]$ cat udp_cli.c
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<arpa/inet.h>
#include<string.h>
#include<netinet/in.h>

int main(int argc,char *argv[])
{

        char *ip="127.0.0.1";

        if(argc!=2)
        {
                printf("argument error\n");
                exit(1);
        }
        int sockfd;
        struct sockaddr_in addr;
        socklen_t addr_size;
        char buffer[1024];
        int n;
        int port=atoi(argv[1]);

        sockfd=socket(AF_INET,SOCK_DGRAM,0);

        if(sockfd < 0)
        {
                printf("socket error\n");
                exit(1);
        }

        memset(&addr,'\0',sizeof(addr));

        addr.sin_family=AF_INET;
        addr.sin_port=htons(port);
        addr.sin_addr.s_addr=inet_addr(ip);


        bzero(buffer,1024);
       strcpy(buffer,"this is to server");
       sendto(sockfd,buffer,1024,0,(struct sockaddr*) &addr,sizeof(addr));

       bzero(buffer,1024);
       addr_size=sizeof(addr);
       recvfrom(sockfd,buffer,1024,0,(struct sockaddr*)&addr,&addr_size);
       printf("Server: %s\n",buffer);
        return 0;
}